---
version: "3.5"

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper-1
    container_name: zookeeper-1
    restart: always
    ports:
      - "21811:21811"
      - "31801:31801"
      - "21801:21801"
    networks:
      - confluent
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
      # Hack for making it possible to define peerType in /etc/kafka/zookeeper.properties
      - ./templates/zookeeper.properties.template:/etc/confluent/docker/zookeeper.properties.template
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_JMX_HOSTNAME: zookeeper-1
      ZOOKEEPER_CLIENT_PORT: 21811
      ZOOKEEPER_JMX_PORT: 21801
      # Original configuration (leading to split-brain)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
      # Updated configuration, first step (new zookeeper nodes are observers)
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888:observer;zookeeper-5:2888:3888:observer;zookeeper-6:2888:3888:observer
      # Updated configuration, first step (old zookeeper nodes are observers)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888:observer;zookeeper-2:2888:3888:observer;zookeeper-3:2888:3888:observer;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888

  zookeeper-2:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper-2
    container_name: zookeeper-2
    restart: always
    ports:
      - "21812:21812"
      - "31802:31802"
      - "21802:21802"
    networks:
      - confluent
    volumes:
      - data-zookeeper-log-2:/var/lib/zookeeper/log
      - data-zookeeper-data-2:/var/lib/zookeeper/data
      # Hack for making it possible to define peerType in /etc/kafka/zookeeper.properties
      - ./templates/zookeeper.properties.template:/etc/confluent/docker/zookeeper.properties.template
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_JMX_HOSTNAME: zookeeper-2
      ZOOKEEPER_CLIENT_PORT: 21812
      ZOOKEEPER_JMX_PORT: 21802
      # Original configuration (leading to split-brain)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
      # Updated configuration, first step (new zookeeper nodes are observers)
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888:observer;zookeeper-5:2888:3888:observer;zookeeper-6:2888:3888:observer
      # Updated configuration, first step (old zookeeper nodes are observers)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888:observer;zookeeper-2:2888:3888:observer;zookeeper-3:2888:3888:observer;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888

  zookeeper-3:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper-3
    container_name: zookeeper-3
    restart: always
    ports:
      - "21813:21813"
      - "31803:31803"
      - "21803:21803"
    networks:
      - confluent
    volumes:
      - data-zookeeper-log-3:/var/lib/zookeeper/log
      - data-zookeeper-data-3:/var/lib/zookeeper/data
      # Hack for making it possible to define peerType in /etc/kafka/zookeeper.properties
      - ./templates/zookeeper.properties.template:/etc/confluent/docker/zookeeper.properties.template
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_JMX_HOSTNAME: zookeeper-3
      ZOOKEEPER_CLIENT_PORT: 21813
      ZOOKEEPER_JMX_PORT: 21803
      # Original configuration (leading to split-brain)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
      # Updated configuration, first step (new zookeeper nodes are observers)
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888:observer;zookeeper-5:2888:3888:observer;zookeeper-6:2888:3888:observer
      # Updated configuration, first step (old zookeeper nodes are observers)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888:observer;zookeeper-2:2888:3888:observer;zookeeper-3:2888:3888:observer;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888

  zookeeper-4:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper-4
    container_name: zookeeper-4
    restart: always
    ports:
      - "21814:21814"
      - "31804:31804"
      - "21804:21804"
    networks:
      - confluent
    volumes:
      - data-zookeeper-log-4:/var/lib/zookeeper/log
      - data-zookeeper-data-4:/var/lib/zookeeper/data
      # Hack for making it possible to define peerType in /etc/kafka/zookeeper.properties
      - ./templates/zookeeper.properties.template:/etc/confluent/docker/zookeeper.properties.template
    # Simulate broken zookeeper node by just running a different command in the container
    # Note: The container needs to run for name resolution to work
    # Comment next line to enable this zookeeper instance
    #command: tail -F /dev/null
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      # Original command line options (for causing split-brain situation)
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      # Updated command line options: Run zookeeper as observer, initially
      #KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=* -Dzookeeper.peerType=observer"
      ZOOKEEPER_SERVER_ID: 4
      ZOOKEEPER_JMX_HOSTNAME: zookeeper-4
      ZOOKEEPER_CLIENT_PORT: 21814
      ZOOKEEPER_JMX_PORT: 21804
      # Original configuration (leading to split-brain)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
      # Updated configuration, first step (new zookeeper nodes are observers)
      ZOOKEEPER_PEER_TYPE: observer
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888:observer;zookeeper-5:2888:3888:observer;zookeeper-6:2888:3888:observer
      # Updated configuration, first step (old zookeeper nodes are observers)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888:observer;zookeeper-2:2888:3888:observer;zookeeper-3:2888:3888:observer;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
  
  zookeeper-5:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper-5
    container_name: zookeeper-5
    restart: always
    ports:
      - "21815:21815"
      - "31805:31805"
      - "21805:21805"
    networks:
      - confluent
    volumes:
      - data-zookeeper-log-5:/var/lib/zookeeper/log
      - data-zookeeper-data-5:/var/lib/zookeeper/data
      # Hack for making it possible to define peerType in /etc/kafka/zookeeper.properties
      - ./templates/zookeeper.properties.template:/etc/confluent/docker/zookeeper.properties.template
    # Simulate broken zookeeper node by just running a different command in the container
    # Note: The container needs to run for name resolution to work
    # Comment next line to enable this zookeeper instance
    #command: tail -F /dev/null
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      # Original command line options (for causing split-brain situation)
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      # Updated command line options: Run zookeeper as observer, initially
      #KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=* -Dzookeeper.peerType=observer"
      ZOOKEEPER_SERVER_ID: 5
      ZOOKEEPER_JMX_HOSTNAME: zookeeper-5
      ZOOKEEPER_CLIENT_PORT: 21815
      ZOOKEEPER_JMX_PORT: 21805
      #ZOOKEEPER_PEER_TYPE: observer
      # Original configuration (leading to split-brain)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
      # Updated configuration, first step (new zookeeper nodes are observers)
      ZOOKEEPER_PEER_TYPE: observer
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888:observer;zookeeper-5:2888:3888:observer;zookeeper-6:2888:3888:observer
      # Updated configuration, first step (old zookeeper nodes are observers)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888:observer;zookeeper-2:2888:3888:observer;zookeeper-3:2888:3888:observer;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888

  zookeeper-6:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    hostname: zookeeper-6
    container_name: zookeeper-6
    restart: always
    ports:
      - "21816:21816"
      - "31806:31806"
      - "21806:21806"
    networks:
      - confluent
    volumes:
      - data-zookeeper-log-6:/var/lib/zookeeper/log
      - data-zookeeper-data-6:/var/lib/zookeeper/data
      # Hack for making it possible to define peerType in /etc/kafka/zookeeper.properties
      - ./templates/zookeeper.properties.template:/etc/confluent/docker/zookeeper.properties.template
    # Simulate broken zookeeper node by just running a different command in the container
    # Note: The container needs to run for name resolution to work
    # Comment next line to enable this zookeeper instance
    #command: tail -F /dev/null
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      # Original command line options (for causing split-brain situation)
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      # Updated command line options: Run zookeeper as observer, initially
      #KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=* -Dzookeeper.peerType=observer"
      ZOOKEEPER_SERVER_ID: 6
      ZOOKEEPER_JMX_HOSTNAME: zookeeper-6
      ZOOKEEPER_CLIENT_PORT: 21816
      ZOOKEEPER_JMX_PORT: 21806
      # Original configuration (leading to split-brain)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888
      # Updated configuration, first step (new zookeeper nodes are observers)
      ZOOKEEPER_PEER_TYPE: observer
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888;zookeeper-4:2888:3888:observer;zookeeper-5:2888:3888:observer;zookeeper-6:2888:3888:observer
      # Updated configuration, first step (old zookeeper nodes are observers)
      #ZOOKEEPER_SERVERS: zookeeper-1:2888:3888:observer;zookeeper-2:2888:3888:observer;zookeeper-3:2888:3888:observer;zookeeper-4:2888:3888;zookeeper-5:2888:3888;zookeeper-6:2888:3888

volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-zookeeper-log-2:
  data-zookeeper-data-2:
  data-zookeeper-log-3:
  data-zookeeper-data-3:
  data-zookeeper-log-4:
  data-zookeeper-data-4:
  data-zookeeper-log-5:
  data-zookeeper-data-5:
  data-zookeeper-log-6:
  data-zookeeper-data-6:

networks:
  confluent:
